name: "Update source AMI"

on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 6/24 * * *'
  workflow_dispatch:
  
jobs:
  compare:
    name: "Check if new source AMI is avaiable"
    runs-on: ubuntu-latest
    env:
      AWS_DEFAULT_REGION: eu-west-1

    steps:
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.1.2
        with:
          url: https://vault.online.ntnu.no:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
              /aws/creds/gh-workflow-packer-baseline access_key | AWS_ACCESS_KEY_ID ;
              /aws/creds/gh-workflow-packer-baseline secret_key | AWS_SECRET_ACCESS_KEY ;

      - name: Wait for IAM eventual consistency
        run: sleep 10

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION}}
      
      - name: Find source AMI id
        run: > 
          ID=$(aws ec2 describe-images
          --filter "Name=tag:production,Values=true" "Name=name,Values=dotkom/images/hvm-ssd/ubuntu-focal-20.04-baseline*"
          --owners "self"
          --query 'reverse(sort_by(Images, &CreationDate))[0].{Tags:Tags[?Key == `source`] | [0].Value}'
          --output text) &&
          echo "::set-output name=source_id::$ID"

      - name: Find possible update
        run: > 
          ID=$(aws ec2 describe-images
          --filter "Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*"
          --owners "099720109477"
          --query "reverse(sort_by(Images, &CreationDate))[0].[ImageId]" 
          --output text) &&
          echo "::set-output name=update_id::$ID"

  packer:
    name: "Build AMI with updated source"
    runs-on: ubuntu-latest
    needs: compare
    if: ${{ needs.compare.outputs.source_id }} != ${{ needs.compare.outputs.update_id }}
    env:
      AWS_DEFAULT_REGION: eu-west-1
    steps:
      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.1.2
        with:
          url: https://vault.online.ntnu.no:8200
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
              /aws/creds/gh-workflow-packer-baseline access_key | AWS_ACCESS_KEY_ID ;
              /aws/creds/gh-workflow-packer-baseline secret_key | AWS_SECRET_ACCESS_KEY ;

      - name: Wait for IAM eventual consistency
        run: sleep 10

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION}}
          
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -syntax-only
          target: packer.pkr.hcl
          
      - name: Build AWS AMI
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: > 
            -var=ami_tags={ci-run-id="${{ github.run_id }}"} 
            -except=vagrant.testing
          target: packer.pkr.hcl

      - name: Find AMI ID
        id: ami_id
        run: > 
          ID=$(aws ec2 describe-images
          --filter "Name=tag:ci-run-id,Values=${{ github.run_id }}" 
          "Name=name,Values=dotkom/images/hvm-ssd/ubuntu-focal-20.04-baseline*"
          --query "Images[0].[ImageId]" 
          --output text) &&
          echo "::set-output name=id::$ID"

      - name: Tag AMI as production
        if: github.event_name == 'push'
        run: aws ec2 create-tags --resources ${{steps.ami_id.outputs.id}} --tags Key=production,Value=true
